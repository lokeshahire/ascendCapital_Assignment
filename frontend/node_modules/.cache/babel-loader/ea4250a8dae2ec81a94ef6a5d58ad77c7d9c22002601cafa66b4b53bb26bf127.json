{"ast":null,"code":"var _jsxFileName = \"D:\\\\LOKESH\\\\VS Code\\\\Placement\\\\Ascent_Capital\\\\frontend\\\\src\\\\components\\\\TaskBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport TaskList from \"./TaskList\";\nimport \"./TaskBoard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskBoard = () => {\n  _s();\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    // Fetch the user's lists from the server\n    fetch(\"http://localhost:5000/task/\").then(response => response.json()).then(data => setLists(data.tasks)).catch(error => console.error(\"Error fetching lists:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), lists.map(list => /*#__PURE__*/_jsxDEV(TaskList, {\n      list: list\n    }, list.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskBoard, \"LrIaNofUeLvNeBc8bn5FotDYde0=\");\n_c = TaskBoard;\nexport default TaskBoard;\nvar _c;\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"names":["React","useEffect","useState","TaskList","jsxDEV","_jsxDEV","TaskBoard","_s","lists","setLists","fetch","then","response","json","data","tasks","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","list","id","_c","$RefreshReg$"],"sources":["D:/LOKESH/VS Code/Placement/Ascent_Capital/frontend/src/components/TaskBoard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport TaskList from \"./TaskList\";\r\nimport \"./TaskBoard.css\";\r\n\r\nconst TaskBoard = () => {\r\n  const [lists, setLists] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch the user's lists from the server\r\n    fetch(\"http://localhost:5000/task/\")\r\n      .then((response) => response.json())\r\n      .then((data) => setLists(data.tasks))\r\n      .catch((error) => console.error(\"Error fetching lists:\", error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"task-board\">\r\n      <h1>Task Board</h1>\r\n      {lists.map((list) => (\r\n        <TaskList key={list.id} list={list} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskBoard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACAS,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,QAAQ,CAACK,IAAI,CAACC,KAAK,CAAC,CAAC,CACpCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAKc,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBf,OAAA;MAAAe,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBhB,KAAK,CAACiB,GAAG,CAAEC,IAAI,iBACdrB,OAAA,CAACF,QAAQ;MAAeuB,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CAnBID,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAqBf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}