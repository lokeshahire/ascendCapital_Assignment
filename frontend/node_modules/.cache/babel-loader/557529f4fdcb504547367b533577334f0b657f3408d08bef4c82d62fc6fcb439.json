{"ast":null,"code":"var _jsxFileName = \"D:\\\\LOKESH\\\\VS Code\\\\Placement\\\\Ascent_Capital\\\\frontend\\\\src\\\\components\\\\TaskBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport TaskList from \"./TaskList\";\nimport \"./TaskBoard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskBoard = () => {\n  _s();\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    // Fetch the user's lists from the server\n    fetch(\"http://localhost:5000/task/\").then(response => response.json()).then(data => setLists(data.tasks)).catch(error => console.error(\"Error fetching lists:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), notes ? notes.map(e => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Title : \", e.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Description : \", e.body]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteHandle(e._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this)]\n      }, e._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Notes Not Available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskBoard, \"LrIaNofUeLvNeBc8bn5FotDYde0=\");\n_c = TaskBoard;\nexport default TaskBoard;\nvar _c;\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"names":["React","useEffect","useState","TaskList","jsxDEV","_jsxDEV","TaskBoard","_s","lists","setLists","fetch","then","response","json","data","tasks","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","notes","map","e","title","body","onClick","deleteHandle","_id","_c","$RefreshReg$"],"sources":["D:/LOKESH/VS Code/Placement/Ascent_Capital/frontend/src/components/TaskBoard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport TaskList from \"./TaskList\";\r\nimport \"./TaskBoard.css\";\r\n\r\nconst TaskBoard = () => {\r\n  const [lists, setLists] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch the user's lists from the server\r\n    fetch(\"http://localhost:5000/task/\")\r\n      .then((response) => response.json())\r\n      .then((data) => setLists(data.tasks))\r\n      .catch((error) => console.error(\"Error fetching lists:\", error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"task-board\">\r\n      <h1>Notes Here</h1>\r\n      {notes ? (\r\n        notes.map((e) => {\r\n          return (\r\n            <div key={e._id}>\r\n              <h2>Title : {e.title}</h2>\r\n              <h2>Description : {e.body}</h2>\r\n              <button onClick={() => deleteHandle(e._id)}>Delete</button>\r\n              <hr />\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <h1> Notes Not Available</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskBoard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACAS,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,QAAQ,CAACK,IAAI,CAACC,KAAK,CAAC,CAAC,CACpCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAKc,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBf,OAAA;MAAAe,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBC,KAAK,GACJA,KAAK,CAACC,GAAG,CAAEC,CAAC,IAAK;MACf,oBACEtB,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAAe,QAAA,GAAI,UAAQ,EAACO,CAAC,CAACC,KAAK;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1BnB,OAAA;UAAAe,QAAA,GAAI,gBAAc,EAACO,CAAC,CAACE,IAAI;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC/BnB,OAAA;UAAQyB,OAAO,EAAEA,CAAA,KAAMC,YAAY,CAACJ,CAAC,CAACK,GAAG,CAAE;UAAAZ,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3DnB,OAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAJEG,CAAC,CAACK,GAAG;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CAAC;IAEV,CAAC,CAAC,gBAEFnB,OAAA;MAAAe,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAC7B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CA9BID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAgCf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}