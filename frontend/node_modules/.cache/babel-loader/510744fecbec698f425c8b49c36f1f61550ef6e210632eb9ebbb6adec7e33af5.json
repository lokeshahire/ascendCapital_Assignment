{"ast":null,"code":"var _jsxFileName = \"D:\\\\LOKESH\\\\VS Code\\\\Placement\\\\Ascent_Capital\\\\frontend\\\\src\\\\components\\\\TaskBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport TaskList from \"./TaskList\";\nimport \"./TaskBoard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskBoard = () => {\n  _s();\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    // Fetch the user's lists from the server\n    fetch(\"http://localhost:5000/task/\").then(response => response.json()).then(data => setLists(data.tasks)).catch(error => console.error(\"Error fetching lists:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create Notes Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"enter title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"enter body\",\n        value: body,\n        onChange: e => setBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Add Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), lists ? lists.map(e => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          list: e\n        }, e._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, e._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Notes Not Available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskBoard, \"LrIaNofUeLvNeBc8bn5FotDYde0=\");\n_c = TaskBoard;\nexport default TaskBoard;\nvar _c;\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"names":["React","useEffect","useState","TaskList","jsxDEV","_jsxDEV","TaskBoard","_s","lists","setLists","fetch","then","response","json","data","tasks","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","title","onChange","e","setTitle","target","body","setBody","onClick","handleSubmit","map","list","_id","_c","$RefreshReg$"],"sources":["D:/LOKESH/VS Code/Placement/Ascent_Capital/frontend/src/components/TaskBoard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport TaskList from \"./TaskList\";\r\nimport \"./TaskBoard.css\";\r\n\r\nconst TaskBoard = () => {\r\n  const [lists, setLists] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch the user's lists from the server\r\n    fetch(\"http://localhost:5000/task/\")\r\n      .then((response) => response.json())\r\n      .then((data) => setLists(data.tasks))\r\n      .catch((error) => console.error(\"Error fetching lists:\", error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"task-board\">\r\n      <div>\r\n        <h1>Create Notes Here</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"enter title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"enter body\"\r\n          value={body}\r\n          onChange={(e) => setBody(e.target.value)}\r\n        />\r\n\r\n        <button onClick={handleSubmit}>Add Notes</button>\r\n      </div>\r\n\r\n      <h1>Notes Here</h1>\r\n      {lists ? (\r\n        lists.map((e) => {\r\n          return (\r\n            <div key={e._id}>\r\n              {/* <h2>Title : {e.name}</h2> */}\r\n              <TaskList key={e._id} list={e} />\r\n              {/* <button onClick={() => deleteHandle(e._id)}>Delete</button> */}\r\n              <hr />\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <h1> Notes Not Available</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskBoard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}