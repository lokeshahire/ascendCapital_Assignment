{"ast":null,"code":"var _jsxFileName = \"D:\\\\LOKESH\\\\VS Code\\\\Placement\\\\Ascent_Capital\\\\frontend\\\\src\\\\components\\\\TaskBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport TaskList from \"./TaskList\";\nimport \"./TaskBoard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskBoard = () => {\n  _s();\n  const [lists, setLists] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [completed, setCompleted] = useState(\"\");\n  useEffect(() => {\n    // Fetch the user's lists from the server\n    fetch(\"http://localhost:5000/task/\").then(response => response.json()).then(data => setLists(data.tasks)).catch(error => console.error(\"Error fetching lists:\", error));\n  }, []);\n  const handleTaskDrop = (taskId, newListId) => {\n    // Make an API request to update the task's list ID in the database\n    fetch(`http://localhost:5000/task/updateTask/${taskId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        listId: newListId\n      })\n    }).then(response => response.json()).then(data => {\n      // Handle the API response, e.g., update the local state or display a success message\n      console.log(\"Task moved successfully:\", data);\n    }).catch(error => {\n      // Handle any errors that occur during the API request\n      console.error(\"Error moving task:\", error);\n    });\n  };\n  const handleSubmit = () => {\n    const payload = {\n      name,\n      completed\n    };\n    // console.log(payload);\n    fetch(\"http://localhost:5000/task/createTask\", {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: localStorage.getItem(\"token\")\n      }\n    }).then(res => res.json()).then(res => console.log(res)).catch(err => console.log(err));\n    window.location.reload();\n  };\n  const handleDeleteTask = taskId => {\n    // Remove the task from the state\n\n    const updatedLists = lists.map(list => {\n      if (list.id === taskId) {\n        const updatedTasks = list.tasks.filter(task => task.id !== taskId);\n        return {\n          ...list,\n          tasks: updatedTasks\n        };\n      }\n      return list;\n    });\n    console.log(\"updatedLists\", updatedLists);\n    setLists(updatedLists);\n    window.location.reload();\n    fetch(`http://localhost:5000/task/deleteTask/${taskId}`, {\n      method: \"DELETE\"\n    }).then(response => {\n      if (response.ok) {\n        console.log(\"Task deleted successfully.\");\n      } else {\n        console.error(\"Failed to delete task.\");\n      }\n    }).catch(error => {\n      console.error(\"Error deleting task:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create Notes Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"enter title\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"enter body\",\n        value: completed,\n        onChange: e => setCompleted(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Add Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), lists ? lists.map(e => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          list: e,\n          onDeleteTask: handleDeleteTask,\n          onTaskDrop: handleTaskDrop\n        }, e._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)]\n      }, e._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Notes Not Available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskBoard, \"TP7ZqeBKM9upEeW8tCf22oYXGq0=\");\n_c = TaskBoard;\nexport default TaskBoard;\nvar _c;\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"names":["React","useEffect","useState","TaskList","jsxDEV","_jsxDEV","TaskBoard","_s","lists","setLists","name","setName","completed","setCompleted","fetch","then","response","json","data","tasks","catch","error","console","handleTaskDrop","taskId","newListId","method","headers","body","JSON","stringify","listId","log","handleSubmit","payload","Authorization","localStorage","getItem","res","err","window","location","reload","handleDeleteTask","updatedLists","map","list","id","updatedTasks","filter","task","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","onDeleteTask","onTaskDrop","_id","_c","$RefreshReg$"],"sources":["D:/LOKESH/VS Code/Placement/Ascent_Capital/frontend/src/components/TaskBoard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport TaskList from \"./TaskList\";\r\nimport \"./TaskBoard.css\";\r\n\r\nconst TaskBoard = () => {\r\n  const [lists, setLists] = useState([]);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [completed, setCompleted] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Fetch the user's lists from the server\r\n    fetch(\"http://localhost:5000/task/\")\r\n      .then((response) => response.json())\r\n      .then((data) => setLists(data.tasks))\r\n      .catch((error) => console.error(\"Error fetching lists:\", error));\r\n  }, []);\r\n\r\n  const handleTaskDrop = (taskId, newListId) => {\r\n    // Make an API request to update the task's list ID in the database\r\n    fetch(`http://localhost:5000/task/updateTask/${taskId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ listId: newListId }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Handle the API response, e.g., update the local state or display a success message\r\n        console.log(\"Task moved successfully:\", data);\r\n      })\r\n      .catch((error) => {\r\n        // Handle any errors that occur during the API request\r\n        console.error(\"Error moving task:\", error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const payload = {\r\n      name,\r\n      completed,\r\n    };\r\n    // console.log(payload);\r\n    fetch(\"http://localhost:5000/task/createTask\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(payload),\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: localStorage.getItem(\"token\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => console.log(res))\r\n      .catch((err) => console.log(err));\r\n\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleDeleteTask = (taskId) => {\r\n    // Remove the task from the state\r\n\r\n    const updatedLists = lists.map((list) => {\r\n      if (list.id === taskId) {\r\n        const updatedTasks = list.tasks.filter((task) => task.id !== taskId);\r\n        return { ...list, tasks: updatedTasks };\r\n      }\r\n      return list;\r\n    });\r\n    console.log(\"updatedLists\", updatedLists);\r\n    setLists(updatedLists);\r\n    window.location.reload();\r\n\r\n    fetch(`http://localhost:5000/task/deleteTask/${taskId}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          console.log(\"Task deleted successfully.\");\r\n        } else {\r\n          console.error(\"Failed to delete task.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting task:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-board\">\r\n      <div>\r\n        <h1>Create Notes Here</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"enter title\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"enter body\"\r\n          value={completed}\r\n          onChange={(e) => setCompleted(e.target.value)}\r\n        />\r\n\r\n        <button onClick={handleSubmit}>Add Notes</button>\r\n      </div>\r\n\r\n      <h1>Notes Here</h1>\r\n      {lists ? (\r\n        lists.map((e) => {\r\n          return (\r\n            <div key={e._id}>\r\n              {/* <h2>Title : {e.name}</h2> */}\r\n              <TaskList\r\n                key={e._id}\r\n                list={e}\r\n                onDeleteTask={handleDeleteTask}\r\n                onTaskDrop={handleTaskDrop}\r\n              />\r\n              {/* <button onClick={() => deleteHandle(e._id)}>Delete</button> */}\r\n              <hr />\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <h1> Notes Not Available</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskBoard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}